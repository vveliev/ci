# -*- coding: utf-8 -*-
# vim: ft=yaml
# yamllint disable rule:truthy
# yamllint disable rule:line-length
---
on:
  workflow_call:
    inputs:
      docker-registry:
        description: Docker registry to push to
        required: false
        type: string
        default: ghcr.io
      docker-registry-username:
        description: Docker registry username
        required: false
        type: string
        default: ${{ github.actor }}
      context:
        description: Docker build context
        required: false
        type: string
        default: .
      dockerfile:
        description: Dockerfile to build
        required: false
        type: string
        default: ./build/app/Dockerfile
      target:
        description: Docker build target
        required: false
        type: string
        default: null
      push:
        description: Push to registry
        required: false
        type: boolean
        default: true
      docker_tags:
        description: List of tags to apply to the built image
        required: false
        type: string
        default: 'latest'
    secrets:
      docker-registry-password:
        description: Docker registry password
        required: true

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: repository-to-lower-case
        run: |
          echo "value=${{ github.repository }}" | tr '[:upper:]' '[:lower:]' >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ inputs.push }}
          context: ${{ inputs.context }}
          no-cache: true
          file: ${{ inputs.dockerfile }}
          target: ${{ inputs.target }}
          tags: |
            ${{ inputs.docker_tags }} | jq -r '.[]' | while read tag; do
              echo "${{ inputs.docker-registry }}/${{ steps.repository-to-lower-case.outputs.value }}:$tag"
            done