# -*- coding: utf-8 -*-
# vim: ft=yaml
# yamllint disable rule:truthy
# yamllint disable rule:line-length
---
on:
  workflow_call:
    inputs:
      docker-registry:
        description: Docker registry to push to
        required: false
        type: string
        default: ghcr.io
      docker-registry-username:
        description: Docker registry username
        required: false
        type: string
        default: ${{ github.actor }}
      context:
        description: Docker build context
        required: false
        type: string
        default: .
      dockerfile:
        description: Dockerfile to build
        required: false
        type: string
        default: ./build/app/Dockerfile
      target:
        description: Docker build target
        required: false
        type: string
        default: null
      push:
        description: Push to registry
        required: false
        type: boolean
        default: true
      version:
        description: Docker image version
        required: true
        type: string
      tags:
        description: Docker image tags
        required: false
        type: string
        default: "latest"
    secrets:
      docker-registry-password:
        description: Docker registry password
        required: true

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.docker-registry }}
          username: ${{ inputs.docker-registry-username }}
          password: ${{ secrets.docker-registry-password }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build the Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          target: ${{ inputs.target }}
          push: ${{ inputs.push }}
          no-cache: true
          tags: ${{ inputs.docker-registry }}/${{ github.repository }}:${{ inputs.version }}
      
      - name: Tag and push
        run: |
          tags="${{ inputs.tags }}"
          echo "Tagging and publishing ${{ inputs.docker-registry }}/${{ github.repository }}:${{ inputs.version }} with tags: $tags"
          IFS=',' read -ra tags <<< "$tags"
          for tag in "${tags[@]}"; do
            docker tag ${{ inputs.docker-registry }}/${{ github.repository }}:${{ inputs.version }} ${{ inputs.docker-registry }}/${{ github.repository }}:$tag
            docker push ${{ inputs.docker-registry }}/${{ github.repository }}:$tag
          done
